---
- name: Set CR no for workflow
  set_stats:
    data:
      cr_no: "{{ u_q1_change_request }}" 

- name: Set time for workflow
  set_stats:
    data:
      cr_date: "{{ u_q1_date }}"

- name: Wait until the file /var/tmp/app-stopped is present before continuing
  wait_for:
    path: /var/tmp/app-stopped
    sleep: 60
    timeout: 1800

#- name: check free disk space
#  shell: 'df {{ item }}'
#  with_items:
#    - "{{ mount_points }}"
#  register: df_output
#  failed_when: df_output.stdout.split()[11] | regex_replace('%','') | int > 75

- name: running prepatch info commands
  shell: |
    uname -a
    uptime
    date
    adinfo
    cat /etc/resolv.conf
    df -hTP
    df -hP |wc -l
    cat /etc/fstab
    ifconfig -a
    netstat -rn
    vgdisplay
    pvdisplay
    lvscan
    multipath -ll
    blkid
  register: prepatch
  ignore_errors: true

- name: Print result of prepatch
  debug:
    var: prepatch

- name: Create backup directory for /etc/yum.repos.d/
  copy:
    src: /etc/yum.repos.d/
    dest: /etc/yum.repos.d/backup

- name: Find files in /etc/yum.repos.d/
  find:
    paths: /etc/yum.repos.d/
    patterns: "*"
  register: files_to_delete

- name: Clean /etc/yum.repos.d/
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"

- name: Run yum clean all
  command: yum clean all

- name: Get packages that can be patched with security fixes
  yum:
    security: "{{ ev_security_only }}"
    list: updates
    state: latest
    update_cache: yes
  register: reg_dnf_output_secu
 
- name: List packages that can be patched with security fixes
  debug: 
    msg: "{{ reg_dnf_output_secu.results | map(attribute='name') | list }}"
